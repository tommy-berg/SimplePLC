name: CMake on multiple platforms

on:
  push:        { branches: [main] }
  pull_request:{ branches: [main] }

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          # ─ Linux ────────────────────────────────────────────────────────
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            build_type: Release
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
            build_type: Release

          # ─ Windows ─────────────────────────────────────────────────────
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
            build_type: Release
            toolchain_file: '${{ github.workspace }}\\vcpkg\\scripts\\buildsystems\\vcpkg.cmake'

    steps:
    - uses: actions/checkout@v4

    # ---------- Linux --------------------------------------------------------
    - name: Install dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt update
        sudo apt install -y build-essential clang pkg-config cmake \
                             libmodbus-dev liblua5.3-dev

    # ---------- Windows ------------------------------------------------------
    - name: Install vcpkg
      if: runner.os == 'Windows'
      run: |
        git clone https://github.com/microsoft/vcpkg.git
        .\vcpkg\bootstrap-vcpkg.bat

    - name: Install packages via vcpkg
      if: runner.os == 'Windows'
      run: |
        .\vcpkg\vcpkg install libmodbus lua pkgconf --triplet x64-windows-static

    # ---------- Configure ----------------------------------------------------
    - name: Configure (Linux)
      if: runner.os == 'Linux'
      run: |
        cmake -S . -B build \
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

    - name: Configure (Windows)
      if: runner.os == 'Windows'
      shell: cmd
      run: >
        cmake -S . -B build ^
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} ^
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} ^
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ^
          -DCMAKE_TOOLCHAIN_FILE=${{ matrix.toolchain_file }}

    # ---------- Build & test -------------------------------------------------
    - name: Build
      run: cmake --build build --config ${{ matrix.build_type }}

    - name: Test
      working-directory: build
      run: ctest --build-config ${{ matrix.build_type }}
