name: Build and Release SimplePLC

on:
  push:
    branches: [main]
    tags:
      - 'v*.*.*'

permissions:
  contents: write 

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            build_type: Release
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
            build_type: Release
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
            build_type: Release
            toolchain_file: '${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake'

    steps:
    - uses: actions/checkout@v4

    # ---------- Linux Dependencies ----------
    - name: Install dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt update
        sudo apt install -y build-essential clang pkg-config cmake \
                             libmodbus-dev liblua5.3-dev zip

    # ---------- Windows Dependencies ----------
    - name: Install vcpkg
      if: runner.os == 'Windows'
      run: |
        git clone https://github.com/microsoft/vcpkg.git
        .\vcpkg\bootstrap-vcpkg.bat

    - name: Install packages via vcpkg
      if: runner.os == 'Windows'
      run: |
        .\vcpkg\vcpkg install libmodbus lua pkgconf --triplet x64-windows-static

    # ---------- Configure ----------
    - name: Configure (Linux)
      if: runner.os == 'Linux'
      run: |
        cmake -S . -B build \
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DCMAKE_EXE_LINKER_FLAGS="-static-libgcc -static-libstdc++"

    - name: Configure (Windows)
      if: runner.os == 'Windows'
      shell: cmd
      run: >
        cmake -S . -B build ^
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} ^
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} ^
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ^
          -DCMAKE_TOOLCHAIN_FILE=${{ matrix.toolchain_file }}

    # ---------- Build ----------
    - name: Build
      run: cmake --build build --config ${{ matrix.build_type }}

    # ---------- Strip Binaries ----------
    - name: Strip binaries (Linux)
      if: runner.os == 'Linux'
      run: |
        strip build/SimplePLC || echo "strip failed (likely dynamic fallback)"

    # ---------- Verify Binary ----------
    - name: Verify binary exists (Linux)
      if: runner.os == 'Linux'
      run: test -f build/SimplePLC || (echo "Binary not found!" && exit 1)

    - name: Verify binary exists (Windows)
      if: runner.os == 'Windows'
      run: if not exist build\Release\SimplePLC.exe exit 1

    # ---------- Package ----------
    - name: Package (Linux)
      if: runner.os == 'Linux'
      run: |
        mkdir -p dist
        cp build/SimplePLC dist/
        zip SimplePLC-${{ matrix.os }}-${{ github.ref_name }}.zip dist/*

    - name: Package (Windows)
      if: runner.os == 'Windows'
      run: |
        mkdir dist
        copy build\\Release\\SimplePLC.exe dist\\
        powershell Compress-Archive -Path dist\\* -DestinationPath SimplePLC-${{ matrix.os }}-${{ github.ref_name }}.zip

    # ---------- Upload to GitHub Release ----------
    - name: Publish GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: |
          SimplePLC-${{ matrix.os }}-${{ github.ref_name }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
